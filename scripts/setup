#!/usr/bin/env bash
# sudo git clone https://github.com/r-spacex/SpaceXLaunchBot.git /opt/SpaceXLaunchBot && sudo bash /opt/SpaceXLaunchBot/scripts/setup

# -----------------------------------------------------------------------------
# Inspired by netdata installer: /master/packaging/installer/functions.sh#L188
TPUT_RESET="$(tput sgr 0)"
TPUT_YELLOW="$(tput setaf 3)"
TPUT_WHITE="$(tput setaf 7)"
TPUT_BGRED="$(tput setab 1)"
TPUT_BGGREEN="$(tput setab 2)"
TPUT_BOLD="$(tput bold)"
TPUT_DIM="$(tput dim)"

run() {
    location="[${TPUT_DIM}${PWD}${TPUT_RESET}]$ "
    printf "${location}${TPUT_BOLD}${TPUT_YELLOW}"
    printf "$*"
    printf "${TPUT_RESET}\n"

    # Run all arguments - * puts all arguments to this function into a single string
    # Note: only call run on one command, piping and redirection kinda doesn't work
    $*

    # The ? gets the exit status of the command
    ret=$?

	if [ ${ret} -ne 0 ]; then
		# FAILED
        printf "${TPUT_BGRED}${TPUT_WHITE}${TPUT_BOLD} FAILED ${TPUT_RESET} \n\n"
	else
        # OK
		printf "${TPUT_BGGREEN}${TPUT_WHITE}${TPUT_BOLD} OK ${TPUT_RESET} \n\n"
	fi

	return $ret
}

askyn() {
    while true; do
        read -p "$1 [Yy/Nn]" yn
        case $yn in
            [Yy]* ) return 0;;
            [Nn]* ) return 1;;
            * ) echo "Please answer y or n";;
        esac
    done
}

# https://stackoverflow.com/a/34143401/6396652
exists() {
  command -v "$1" >/dev/null 2>&1
}
# -----------------------------------------------------------------------------

if ! [ -f /etc/debian_version ]; then
    askyn "This script is designed to run on Debian, are you sure you want to continue?" || exit
fi

cat << EndOfMsg

SpaceXLaunchBot Setup
---------------------

Dependencies to be installed:
- python3-venv from apt
- redis-server from apt
- pip3 from pypa (if not installed already)

Required:
- Discord bot API token
- Discord Bot List API token
- Bots on Discord API token

EndOfMsg

askyn "Is this correct?" || exit

exists python3 || (echo "python3 does not exist, cannot continue" && exit)

run cd /opt/SpaceXLaunchBot || (echo "/opt/SpaceXLaunchBot does not exist, cannot continue" && exit)

run sudo apt install python3-venv redis-server -y

# pip is not actually required to make the venv, but installing this means that:
# - There is no confusion between system-wide pip and the pip that's copied to the venv
# - The default packages (setuptools, wheel) are installed correctly
if ! exists pip3; then
    echo "Installing the latest version of pip for python3"
    run sudo wget https://bootstrap.pypa.io/get-pip.py -O gp.py
    run sudo python3 gp.py
    run sudo rm gp.py
fi

# Setup slb-venv & install requirements inside slb-venv
run sudo python3 -m venv slb-venv
run sudo slb-venv/bin/pip3 install wheel  # Requirement for installing many pypi packages
run sudo slb-venv/bin/pip3 install -r requirements.txt

# Set up spacexlaunchbot user and fs permissions
run sudo adduser --system --group --no-create-home spacexlaunchbot
run sudo chown -R spacexlaunchbot:spacexlaunchbot /opt/SpaceXLaunchBot
# Permissions Explanation
# Capital X --> https://www.g-loaded.eu/2005/11/08/the-use-of-the-uppercase-x-in-chmod/
# Give owner of the file (spacexlaunchbot) the ability to r, w, and X all files
# Allow everyone else to r and X, don't allow anyone else to w
run sudo chmod -R u+rwX,go+rX,go-w /opt/SpaceXLaunchBot

run sudo mkdir /var/log/spacexlaunchbot
run sudo chown spacexlaunchbot:spacexlaunchbot /var/log/spacexlaunchbot

run sudo cp -R -p services/systemd/. /etc/systemd/system

# The apt installed version of redis-server looks for a config file here by default
run sudo cp -R services/redis/. /etc/redis
run sudo systemctl restart redis

if askyn "Edit spacexlaunchbot.service now? This will have to be done before running it";
then sudo nano /etc/systemd/system/spacexlaunchbot.service; fi

cat << EndOfMsg

Setup Finished
--------------
To start spacexlaunchbot, enable and start it using systemctl
To use a previous Redis dump, stop redis, move the dump to /var/lib/redis and then start redis

EndOfMsg

# To get a copy of dump.rdb:
# sudo cp /var/lib/redis/dump.rdb ~/ && sudo chown USERNAME dump.rdb
# Then download dump.rdb from ~/
